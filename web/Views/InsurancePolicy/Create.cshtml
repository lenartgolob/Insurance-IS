@model web.Models.InsurancePolicy

@{
    ViewData["Title"] = "Create";
    @* List<InsuranceSubject> insuranceSubjects = new List<InsuranceSubject>();
    @foreach(var subject in (IEnumerable<InsuranceSubject>)ViewData["InsuranceSubject"]){
        insuranceSubjects.Add(subject);
    }
    List<InsuranceSubject> insuranceSubjectsFiltered = insuranceSubjects;
    int st = 0; *@
    Console.WriteLine(ViewData["InsuranceSubject"]);
}

<h1>Create</h1>

<h4>InsurancePolicy</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label class="control-label">Final price</label>
            <input id="finalPrice" class="form-control" readonly />
        </div>
        <form id="form" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DateFrom" class="control-label"></label>
                <input id="dateFrom" asp-for="DateFrom" class="form-control" onchange="finalSum()" />
                <span asp-validation-for="DateFrom" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateTo" class="control-label"></label>
                <input id="dateTo" asp-for="DateTo" class="form-control" onchange="finalSum()" />
                <span asp-validation-for="DateTo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Insured" class="control-label"></label>
                <select id="selectInsured" asp-for="InsuredID" class="form-control" asp-items="ViewBag.InsuredID" onchange="validate(), finalSum();" >
                    <option value="none">-- Select Insured --</option>
                </select>
                <span asp-validation-for="InsuredID" class="text-danger" />
            </div>
            <div class="form-group">
                <label asp-for="InsuranceSubject" class="control-label"></label>
                <select id="selectObject" asp-for="InsuranceSubjectID" class="form-control" onchange="validateSubtype(); finalSum();" >
                    <option value="">-- Select Object --</option>
                </select>
                <span asp-validation-for="InsuranceSubjectID" class="text-danger" />
            </div>
            <div class="form-group">
                <label asp-for="InsuranceSubtype" class="control-label"></label>
                <select id="selectSubtype" asp-for="InsuranceSubtypeID" class="form-control" onchange="finalSum()" >
                    <option value="">-- Select Subtype --</option>
                </select>
                <span asp-validation-for="InsuranceSubtypeID" class="text-danger" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    var jsonSubjects = @Html.Raw(ViewData["InsuranceSubject"]);
    var subjectSize = parseInt(@ViewData["subjectSize"]);

    var joinSubtype = @Html.Raw(ViewData["joinSubtype"]);
    var joinSize = parseInt(@ViewData["joinSize"]);
    var subtypesObj = @Html.Raw(ViewData["InsuranceSubtype"]);
    var subtypeSize = parseInt(@ViewData["subtypesSize"]);

    var selectObject = document.getElementById("selectObject");
    selectObject.disabled = true;
    var selectSubtype = document.getElementById("selectSubtype");
    selectSubtype.disabled = true;
    function validate()
    {
        var ddl = document.getElementById("selectInsured");
        var selectedValue = parseInt(ddl.options[ddl.selectedIndex].value);
        if (Number.isInteger(selectedValue)){
            selectObject.disabled = false;
        } else {
            selectObject.disabled = true;
        }
        var size = selectObject.options.length - 1;
        for(let i = size; i >= 1; i--) {
            selectObject.remove(i);
        }
        for(let i=0; i<subjectSize; i++){
            if(selectedValue == parseInt(jsonSubjects[i].InsuredID)){
                var opt = document.createElement("option");
                opt.value= jsonSubjects[i].InsuranceSubjectID;
                opt.innerHTML = jsonSubjects[i].Title;
                selectObject.appendChild(opt);
            }

        }

    }

    function validateSubtype()
    {
        var ddl = document.getElementById("selectObject");
        var selectedValue = parseInt(ddl.options[ddl.selectedIndex].value);
        var insuranceType;
        if (Number.isInteger(selectedValue)){
            selectSubtype.disabled = false;
        } else {
            selectSubtype.disabled = true;
        }

        var size = selectSubtype.options.length - 1;
        for(let i = size; i >= 1; i--) {
            selectSubtype.remove(i);
        }
        for(let i = 0; i < joinSize; i++) {
            if(selectedValue == parseInt(joinSubtype[i].InsuranceSubjectID)){
                insuranceType = parseInt(joinSubtype[i].InsuranceTypeID);
            }
        }
        for(let i=0; i<subtypeSize; i++){
            if(insuranceType == parseInt(subtypesObj[i].InsuranceTypeID)){
                var opt = document.createElement("option");
                opt.value= subtypesObj[i].InsuranceSubtypeID;
                opt.innerHTML = subtypesObj[i].Title;
                selectSubtype.appendChild(opt);
            }

        }
    }

    function finalSum() {
        var selectInsured = parseInt(document.getElementById("selectInsured").value);
        var selectObject = parseInt(document.getElementById("selectObject").value);
        var selectSubtype = parseInt(document.getElementById("selectSubtype").value);
        var dateFrom = new Date(document.getElementById("dateFrom").value);
        var dateTo = new Date(document.getElementById("dateTo").value);

        if(selectInsured && selectObject && selectSubtype && dateFrom && dateTo){
            for(let i=0; i<subjectSize; i++){
                if(selectObject == parseInt(jsonSubjects[i].InsuranceSubjectID)){
                    var estimatedValue = jsonSubjects[i].EstimatedValue;
                }
            } 
            for(let i=0; i<subtypeSize; i++){
                if(selectSubtype == parseInt(subtypesObj[i].InsuranceSubtypeID)){
                    var rate = subtypesObj[i].Rate;
                }
            }  
            var days = datediff(dateFrom, dateTo)
            document.getElementById("finalPrice").value = (((parseFloat(estimatedValue)*parseFloat(rate))/365)*days).toFixed(2) + ' â‚¬';

        }

    }

    function parseDate(str) {
        var mdy = str.split('/');
        return new Date(mdy[2], mdy[0]-1, mdy[1]);
    }

    function datediff(first, second) {
        // Take the difference between the dates and divide by milliseconds per day.
        // Round to nearest whole number to deal with DST.
        return Math.round((second-first)/(1000*60*60*24));
    }
</script>