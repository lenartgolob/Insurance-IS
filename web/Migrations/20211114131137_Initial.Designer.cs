// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web.Data;

#nullable disable

namespace web.Migrations
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20211114131137_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-rc.2.21480.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("web.Models.InsurancePolicy", b =>
                {
                    b.Property<int>("InsurancePolicyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsurancePolicyID"), 1L, 1);

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsuranceTypeID")
                        .HasColumnType("int");

                    b.Property<int>("InsuredID")
                        .HasColumnType("int");

                    b.HasKey("InsurancePolicyID");

                    b.HasIndex("InsuranceTypeID");

                    b.HasIndex("InsuredID");

                    b.ToTable("Insurance policy", (string)null);
                });

            modelBuilder.Entity("web.Models.InsuranceType", b =>
                {
                    b.Property<int>("InsuranceTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsuranceTypeID");

                    b.ToTable("Insurance type", (string)null);
                });

            modelBuilder.Entity("web.Models.Insured", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Insured", (string)null);
                });

            modelBuilder.Entity("web.Models.InsurancePolicy", b =>
                {
                    b.HasOne("web.Models.InsuranceType", "InsuranceType")
                        .WithMany("InsurancePolicies")
                        .HasForeignKey("InsuranceTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web.Models.Insured", "Insured")
                        .WithMany("InsurancePolicies")
                        .HasForeignKey("InsuredID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceType");

                    b.Navigation("Insured");
                });

            modelBuilder.Entity("web.Models.InsuranceType", b =>
                {
                    b.Navigation("InsurancePolicies");
                });

            modelBuilder.Entity("web.Models.Insured", b =>
                {
                    b.Navigation("InsurancePolicies");
                });
#pragma warning restore 612, 618
        }
    }
}
